[{"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\index.tsx":"1","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\code-editor.tsx":"2","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\preview.tsx":"3","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\bundler\\index.ts":"4","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\bundler\\plugins\\unpkg_path_plugin.ts":"5","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\bundler\\plugins\\fetch-plugin.ts":"6","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\code-cell.tsx":"7","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\resizable.tsx":"8","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\text-editor.tsx":"9"},{"size":416,"mtime":1679605251395,"results":"10","hashOfConfig":"11"},{"size":2832,"mtime":1679432674788,"results":"12","hashOfConfig":"11"},{"size":2100,"mtime":1679517279007,"results":"13","hashOfConfig":"11"},{"size":1310,"mtime":1679516956588,"results":"14","hashOfConfig":"11"},{"size":2940,"mtime":1678995649550,"results":"15","hashOfConfig":"11"},{"size":3983,"mtime":1678998237433,"results":"16","hashOfConfig":"11"},{"size":1993,"mtime":1679517075310,"results":"17","hashOfConfig":"11"},{"size":2592,"mtime":1679514119197,"results":"18","hashOfConfig":"11"},{"size":1298,"mtime":1679608184148,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e7xaef",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\index.tsx",[],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\code-editor.tsx",[],["40","41"],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\preview.tsx",[],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\bundler\\index.ts",[],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\bundler\\plugins\\unpkg_path_plugin.ts",[],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\bundler\\plugins\\fetch-plugin.ts",[],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\code-cell.tsx",["42"],"import ReactDOM from \"react-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n//function that bundles\r\nimport bundle from \"../bundler\";\r\n\r\n//components\r\nimport CodeEditor from \"./code-editor\";\r\nimport Preview from \"./preview\";\r\nimport Resizable from \"./resizable\";\r\n\r\nconst CodeCell = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(\"\")\r\n\r\n  //the bundle step. the transpile func is async, so make sure this is async\r\n\r\n  //wait for 1 ish seconds without any updates to state, if that happens, we wat to run bundling logic. this is\r\n  //called debouncing: we want a piece of code to run as much as possible until a certain amount of time passes, then we run some function\r\n  //so, we are: user types into editor, first time they do we update input state. also set a timer in the code where it bundles user code.\r\n  //if a user then types into the editor sooner than that 1 second, again update, but cancel the previous timer so we don't execute that\r\n  //first bundling logic. repeat this process until 1 second goes by without us cancelling the timer, then the bundling happens\r\n\r\n  useEffect(() => {\r\n   const timer =  setTimeout(async () => {\r\n      const output = await bundle(input);\r\n      setCode(output.code);\r\n      setError(output.err)\r\n    }, 1000);\r\n\r\n    //remember, return funcs (cleanup) will run every time useeffect is called. execute logic to cancel previous timer\r\n    return () => {\r\n        clearTimeout(timer)\r\n    }\r\n  }, [input]);\r\n\r\n  return (\r\n    <Resizable direction=\"vertical\">\r\n      <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Resizable direction=\"horizontal\">\r\n          <CodeEditor\r\n            initialValue=\"chello\"\r\n            onChange={(value) => setInput(value)}\r\n          />\r\n        </Resizable>\r\n        <Preview code={code} bundleStatus={error}/>\r\n      </div>\r\n    </Resizable>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\resizable.tsx",[],"C:\\Users\\kmput\\OneDrive\\coding projects\\jbook\\src\\components\\text-editor.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":16},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]